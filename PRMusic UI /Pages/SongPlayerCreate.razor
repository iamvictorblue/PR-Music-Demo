@page "/songplayers/create"
@using PRMusic_UI.Services.Contracts
@inject NavigationManager _navigationManager 
@inject ISongPlayerService _repo




@if(songplayer == null){
<form @onsubmit="CreateSongPlayer">
  <label for="fname">First name:</label>
  <input type="text" id="fname" name="fname" @bind-value="newSongPlayer.Name"><br>
  <label for="lname">Last name:</label>
  <input type="text" id="lname" name="lname" @bind-value="newSongPlayer.SongLength" ><br>
  <input type="submit" value="Submit">
</form>
}




@if(response != null)
{
    <h3>@response</h3>
}


<style>
table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

tr:nth-child(even) {
  background-color: #dddddd;
}
.button {
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
}

.button1 {background-color: #4CAF50;} /* Green */
.button2 {background-color: #008CBA;} /* Blue */
</style>


@code{

    [Parameter]

    public Guid Id { get; set; }

    public SongPlayerDto songplayer { get; set; }

    public SongPlayerDto newSongPlayer = new SongPlayerDto();

    public string? response { get; set; } 


    protected override async Task OnInitializedAsync()
    {
        songplayer = null;
    }
   


    protected async Task<string?> CreateSongPlayer()
     {
        newSongPlayer = await _repo.CreateSongPlayer(newSongPlayer);

        if(newSongPlayer != null)
        {
            response = "Record could not be created";
        }
        return response = "Record was successfully created";
    }


}